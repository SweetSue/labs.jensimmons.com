*, *:before, *:after { box-sizing: border-box; }

body {
  padding: 2rem;
}

// Here is the fallback layout. It works in every browser,
// even those that don't understand `@supports`.
main {
  max-width: 500px;
  margin: 0 auto;
}
article {
  margin: 1rem 0;
}


// Now let's create a layout for browsers that understand CSS Grid (and @supports).
@supports (display: grid) {
// Undo the fallback layout.
  main { 
    max-width: none;
    margin: 0;
  }
  article {
    margin: 0;
  }

// Create the Grid-based layout.
  main {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    grid-gap: 1rem;
  }
}


// Create Flexbox-based layout of content inside each card
article {
  display: flex;
  flex-flow: column;
}
article > img {
  order: -1;
  align-self: center;
}


// Adjust the spacing to make things look good
article {
  padding: 2rem;
}
article > h1 {
  margin: 1rem 1rem 0;
}
article > ul {
  margin: 0 0 1rem;
}
article > p {
  margin: 0.25em 1rem 1rem;
}


// Visual styling, including Typography and Button 
main {
  font-family: Avenir, Roboto, Helvetica, san-serif; 
  font-size: 80%;
}
article {
  border:  1px solid black;
  border-radius: 1rem;
}
article > button {
  margin-top: auto; 
  background: teal;
  color: white;
  padding: 0.5rem;
  border: none;
  border-radius: 1rem;
  font-size: 1.2rem;
}
